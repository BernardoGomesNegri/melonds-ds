name: Install Test Suite Dependencies
description: Install Test Suite Dependencies
inputs:
  target:
    description: Platform target
    required: true
  testfile-dir:
    description: Directory containing the test files
    required: false
    default: "testfiles"
  testfile-repo:
    description: Repository containing the test files
    required: true
  testfile-repo-token:
    description: Token for the repository containing the test files
    required: true
  dsi-nand-archive:
    description: Name of the DSI NAND archive
    required: true

runs:
  using: composite
  steps:
      # Skip this step on act due to https://github.com/nektos/act/issues/1849
    - name: Install Dependencies (Linux x86_64/Android)
      if: ${{ !env.ACT && runner.os == 'Linux' && !contains(inputs.target, 'aarch64') }}
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: cmake libopengl0 libopengl-dev p7zip-full xvfb xdg-utils x11-xserver-utils
        version: 1.1

    - name: Install Dependencies (Linux x86_64/Android + act)
      if: ${{ env.ACT && runner.os == 'Linux' && !contains(inputs.target, 'aarch64') }}
      shell: bash
      run: sudo apt-get update -qy && sudo apt-get install -qy cmake libopengl0 libopengl-dev p7zip-full xvfb xdg-utils x11-xserver-utils

    - name: Install MSYS2 Dependencies (Windows)
      uses: msys2/setup-msys2@v2
      if: ${{ runner.os == 'Windows' }}
      with:
        msystem: MINGW64
        update: true
        install: git pkgconf mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: "${{ github.workspace }}/test/requirements.txt"

    - name: Install Python Dependencies
      shell: bash
      run: |
        pip install -v -r "${{ github.workspace }}/test/requirements.txt"

    - name: Download Test Files
      uses: actions/checkout@v4
      with:
        repository: "${{ inputs.testfile-repo }}"
        token: "${{ inputs.testfile-repo-token }}"
        path: "${{ inputs.testfile-dir }}"

    - name: Prepare Test Files
      working-directory: "${{ inputs.testfile-dir }}"
      shell: bash
      run: 7z x "${{ inputs.dsi-nand-archive }}"
