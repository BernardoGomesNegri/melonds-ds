name: Install Dependencies
description: Install Dependencies
inputs:
  target:
    description: Platform target
    required: true
  test-suite:
    description: True if running the test suite
    required: false
    default: "false"
  testfile-dir:
    description: Directory containing the test files
    required: false
    default: "testfiles"
  testfile-repo:
    description: Repository containing the test files
    required: true
  testfile-repo-token:
    description: Token for the repository containing the test files
    required: true
  dsi-nand-archive:
    description: Name of the DSI NAND archive
    required: true

runs:
  using: composite
  steps:
    - name: Install MSYS2 Dependencies (Windows)
      uses: msys2/setup-msys2@v2
      if: ${{ runner.os == 'Windows' }}
      with:
        msystem: MINGW64
        update: true
        install: git pkgconf mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake

    - name: Install Dependencies (macOS)
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: brew install pkg-config cmake ninja ccache

    - name: Add RetroArch PPA
      if: inputs.test-suite == 'true'
      shell: bash
      run: sudo add-apt-repository --yes ppa:libretro/stable

      # Skip this step on act due to https://github.com/nektos/act/issues/1849
    - name: Install Dependencies (Linux x86_64/Android)
      if: ${{ !env.ACT && runner.os == 'Linux' && !contains(inputs.target, 'aarch64') }}
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: cmake ninja-build libepoxy-dev ccache p7zip-full xvfb libx11-xcb-dev xdg-utils x11-xserver-utils
        version: 1.0

    - name: Install Dependencies (Linux x86_64/Android + act)
      if: ${{ env.ACT && runner.os == 'Linux' && !contains(inputs.target, 'aarch64') }}
      shell: bash
      run: sudo apt-get update -qy && sudo apt-get install -qy libepoxy-dev ccache ninja-build cmake p7zip-full xvfb libx11-xcb-dev xdg-utils x11-xserver-utils retroarch

    - name: Install Cross-Compile Support (Linux aarch64)
      if: ${{ runner.os == 'Linux' && contains(inputs.target, 'aarch64') }}
      uses: JesseTG/gha-ubuntu-cross@d4db19532db7c115bee0d051944c226c5057cd4a # Fork needed due to https://github.com/cyberjunk/gha-ubuntu-cross/pull/4
      with:
        arch: arm64

    - name: Install Dependencies (Linux aarch64)
      if: ${{ runner.os == 'Linux' && contains(inputs.target, 'aarch64') }}
      uses: awalsh128/cache-apt-pkgs-action@dev
      with:
        packages: cmake ninja-build libepoxy-dev:arm64 ccache
        version: 1.1

    - name: Set Up CCache
      uses: hendrikmuhs/ccache-action@v1.2.10
      with:
        key: ${{ inputs.target }}-${{ matrix.build-type }}
        variant: ${{ runner.os == 'Windows' && 'sccache' || 'ccache' }}
        # Using sccache on Windows due to https://github.com/hendrikmuhs/ccache-action/issues/112

    - name: Download Test Files
      if: inputs.test-suite == 'true'
      uses: actions/checkout@v3
      with:
        repository: "${{ inputs.testfile-repo }}"
        token: "${{ inputs.testfile-repo-token }}"
        path: "${{ inputs.testfile-dir }}"

    - name: Prepare Test Files
      if: inputs.test-suite == 'true'
      working-directory: "${{ inputs.testfile-dir }}"
      shell: bash
      run: 7z x "${{ inputs.dsi-nand-archive }}"

    - name: Install Go
      if: inputs.test-suite == 'true'
      uses: actions/setup-go@v4
      with:
        go-version: '^1.21.0'

    - name: Install Emutest
      if: inputs.test-suite == 'true'
      shell: bash
      run: go install github.com/kivutar/emutest@latest