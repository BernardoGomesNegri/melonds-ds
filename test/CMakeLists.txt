if (NOT EMUTEST)
    find_program(EMUTEST emutest HINTS "$ENV{HOME}/go/bin" "$ENV{USERPROFILE}/go/bin")
endif()
message(STATUS "EMUTEST: ${EMUTEST}")

if (NOT RETROARCH)
    find_program(RETROARCH retroarch)
endif()
message(STATUS "RETROARCH: ${RETROARCH}")

cmake_path(GET RETROARCH PARENT_PATH RETROARCH_DIR)
set(RETROARCH_SYSTEM_DIR "${RETROARCH_DIR}/system")

function(find_bios BIOS_NAME BIOS_FILE EXPECTED_BIOS_SIZES KNOWN_BIOS_HASHES)
    if (NOT ${BIOS_NAME})
        find_file(${BIOS_NAME} ${BIOS_FILE} HINTS "${RETROARCH_SYSTEM_DIR}" REQUIRED)
    endif()

    file(SIZE ${${BIOS_NAME}} BIOS_SIZE)
    if (NOT (BIOS_SIZE IN_LIST EXPECTED_BIOS_SIZES))
        message(SEND_ERROR "Expected ${BIOS_NAME} with size in ${EXPECTED_BIOS_SIZES}, got ${BIOS_SIZE}")
    endif()

    file(MD5 ${${BIOS_NAME}} BIOS_MD5)
    string(TOLOWER "${BIOS_MD5}" BIOS_MD5)
    if (DEFINED ${KNOWN_BIOS_HASHES})
        if (NOT (BIOS_MD5 IN_LIST KNOWN_BIOS_HASHES))
            message(SEND_ERROR "Expected ${BIOS_NAME} with an MD5 in ${KNOWN_BIOS_HASHES}, got \"${BIOS_MD5}\"")
        endif()
    endif()

    message(STATUS "${BIOS_NAME}: ${${BIOS_NAME}} (${BIOS_SIZE} bytes, MD5=${BIOS_MD5})")
endfunction()


list(APPEND ARM7_BIOS_HASHES "df692a80a5b1bc90728bc3dfc76cd948") # NDS ARM7 BIOS
find_bios(ARM7_BIOS bios7.bin 16384 ${ARM7_BIOS_HASHES})

list(APPEND ARM9_BIOS_HASHES "a392174eb3e572fed6447e956bde4b25") # NDS ARM9 BIOS (World)
list(APPEND ARM9_BIOS_HASHES "08f1dc42ebe85f129b06415f5e2ccbc8") # NDS ARM9 BIOS (China)
find_bios(ARM9_BIOS bios9.bin 4096 ${ARM9_BIOS_HASHES})

find_bios(ARM7_DSI_BIOS dsi_bios7.bin 65536 ARM7_DSI_BIOS_HASHES)
find_bios(ARM9_DSI_BIOS dsi_bios9.bin 65536 ARM9_DSI_BIOS_HASHES)

find_bios(NDS_FIRMWARE firmware.bin "131072;262144;524288" NDS_FIRMWARE_HASHES)
find_bios(DSI_FIRMWARE dsi_firmware.bin "131072;262144;524288" DSI_FIRMWARE_HASHES)
find_bios(DSI_NAND dsi_nand.bin 251658304 DSI_NAND_HASHES)

add_test(
    NAME "RetroArch loads melonDS DS"
    COMMAND ${RETROARCH} -L "$<TARGET_FILE:libretro>" "${CMAKE_BINARY_DIR}/systemTest.nds"
)

add_test(
    NAME "emutest loads melonDS DS"
    COMMAND ${EMUTEST} -L "$<TARGET_FILE:libretro>" -r "${CMAKE_BINARY_DIR}/systemTest.nds" -t "${CMAKE_CURRENT_SOURCE_DIR}/lua/emutest-loads-core.lua"
)